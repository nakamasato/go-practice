name: ent

on:
  pull_request:
    paths:
      - 'pragmatic-cases/ent/**.go'
      - 'go.*'
      - .github/workflows/ent.yml
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ 1.17, 1.18, 1.19 ]
    name: ${{ matrix.go }}
    steps:
      - name: set up
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v3

      - name: start postgres
        working-directory: pragmatic-cases/ent
        run: |
          docker-compose up -d
          while ! docker-compose ps | grep healthy; do echo 'postgres not ready. sleeping 3 sec'; sleep 3; done
          echo 'postgres is ready!'

      - name: run start/start.go
        run: go run start/start.go
        working-directory: pragmatic-cases/ent

      - name: check postgres records
        working-directory: pragmatic-cases/ent
        run: |
          # https://github.com/docker/compose/issues/7306
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from users'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from users' | grep '4 rows'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from cars'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from cars' | grep '5 rows'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from groups'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from groups' | grep '2 rows'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from group_users'
          docker-compose exec -T postgres psql -U postgres postgres -c 'select * from group_users' | grep '3 rows'
